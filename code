import socket
import itertools
import string
import os

def ping(target_ip):
    command = f"ping {target_ip}"
    exit_code = os.system(command)
    if exit_code == 0:
        print(f"Ping to {target_ip} successful.")
    else:
        print(f"Could not ping {target_ip}. Check the hostname or IP address.")

def scan_tcp_ports(target_ip, start_port, end_port):
    open_ports = []
    for port in range(start_port, end_port + 1):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(0.3)
        result = sock.connect_ex((target_ip, port))
        if result == 0:
            open_ports.append(port)
        sock.close()
    return open_ports

def bruteforce_attack(password):
    chars = string.printable.strip()
    attempts = 0
    for length in range(1, len(password) + 1):
        for guess in itertools.product(chars, repeat=length):
            attempts += 1
            guess = ''.join(guess)
            if guess == password:
                return (attempts, guess)
    return (attempts, None)

if __name__ == "__main__":
    target_ip = input("Enter the target IP address: ")
    ping_test = ping(target_ip)
    start_port = int(input("Enter the start port for scanning: "))
    end_port = int(input("Enter the end port for scanning: "))
    print("Scanning ports...")
    open_ports = scan_tcp_ports(target_ip, start_port, end_port)
    if open_ports:
        print(f"Open TCP ports on {target_ip}: {', '.join(map(str, open_ports))}")
    else:
        print("No open TCP ports found.")
    password = input("Input the password to crack: ")
    attempts, guess = bruteforce_attack(password)
    if guess:
        print(f"Password cracked in {attempts} attempts. The password is {guess}.")
    else:
        print(f"Password not cracked after {attempts} attempts.")
